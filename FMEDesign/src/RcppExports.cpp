// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// SelectMinED
Rcpp::List SelectMinED(Eigen::MatrixXd& candidates, Eigen::VectorXd& candlf, int n, double gamma, double s);
RcppExport SEXP _mined_SelectMinED(SEXP candidatesSEXP, SEXP candlfSEXP, SEXP nSEXP, SEXP gammaSEXP, SEXP sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type candidates(candidatesSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd& >::type candlf(candlfSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< double >::type s(sSEXP);
    rcpp_result_gen = Rcpp::wrap(SelectMinED(candidates, candlf, n, gamma, s));
    return rcpp_result_gen;
END_RCPP
}
// Lattice
Eigen::MatrixXd Lattice(int n, int p);
RcppExport SEXP _mined_Lattice(SEXP nSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(Lattice(n, p));
    return rcpp_result_gen;
END_RCPP
}
// mined
List mined(Eigen::MatrixXd& initial, Function logf, int K_iter);
RcppExport SEXP _mined_mined(SEXP initialSEXP, SEXP logfSEXP, SEXP K_iterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd& >::type initial(initialSEXP);
    Rcpp::traits::input_parameter< Function >::type logf(logfSEXP);
    Rcpp::traits::input_parameter< int >::type K_iter(K_iterSEXP);
    rcpp_result_gen = Rcpp::wrap(mined(initial, logf, K_iter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mined_SelectMinED", (DL_FUNC) &_mined_SelectMinED, 5},
    {"_mined_Lattice", (DL_FUNC) &_mined_Lattice, 2},
    {"_mined_mined", (DL_FUNC) &_mined_mined, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_mined(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
